#include "Estevam_SPI.h"

void INICIALIZACAO_ENC() {

config_spi();               // CONFIGURANDO A COMUNICAÃ‡ÃƒO SPI
RESET_ENC();                // RESETANDO O ENC28J60

///////////////////////////////////////////////////////////////////////////////////////////////
// INICIALIZANDO O ENC28J60
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// RESET
//digitalWrite(CS,0);
//SPDR = 0xFF;
//while (!(SPSR & (1 << SPIF)));
//digitalWrite(CS,1);
//delay(100);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO O REGISTRADOR ERXFCON 
set_bank (BANCO_1);
write_register(OPWCR, ERXFCON, 0b00000000);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO O REGISTRADOR MACON1
set_bank (BANCO_2);
write_register(OPWCR, MACON1, 0b00001101);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO O REGISTRADOR MACON3
set_bank (BANCO_2);
write_register(OPWCR, MACON3, 0b00110001);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO O REGISTRADOR MACON4
set_bank (BANCO_2);
write_register(OPWCR, MACON4, 0b01000000);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO OS REGISTRADORES MAMXFLL e MAMXFLH
set_bank (BANCO_2);
write_register(OPWCR, MAMXFLL, 0b11101110);
write_register(OPWCR, MAMXFLH, 0b00000101);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO O REGISTRADOR MABBIPG
set_bank (BANCO_2);
write_register(OPWCR, MABBIPG, 0b00010101);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO OS REGISTRADORES MAIPGL e MAIPGH
set_bank (BANCO_2);
write_register(OPWCR, MAIPGL, 0b00010010);
write_register(OPWCR, MAIPGH, 0b00000000);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO OS REGISTRADORES MAADR6, MAADR5, MAADR4, MAADR3, MAADR2, MAADR1
// ENDEREÃ‡O MAC: 20.18.10.70.07.24
set_bank (BANCO_3);
write_register(OPWCR, MAADR6, 0x20);
write_register(OPWCR, MAADR5, 0x18);
write_register(OPWCR, MAADR4, 0x10);
write_register(OPWCR, MAADR3, 0x70);
write_register(OPWCR, MAADR2, 0x07);
write_register(OPWCR, MAADR1, 0x24);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO O REGISTRADOR PHCON1 <8>
set_bank (BANCO_2);
write_register(OPWCR, MIREGADR, PHCON1);
write_register(OPWCR, MIWRL, 0b00000000);
write_register(OPWCR, MIWRH, 0b00000001);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO O BUFFER DE RECEBIMENTO 
// INÃCIO DO BUFFER DE RECEBIMENTO
set_bank (BANCO_0);
write_register(OPWCR, ERXSTL, 0x00);
write_register(OPWCR, ERXSTH, 0x00);

// FINAL DO BUFFER DE RECEBIMENTO
set_bank (BANCO_0);
write_register(OPWCR, ERXNDL, 0x10);
write_register(OPWCR, ERXNDH, 0x1A);

// PONTEIRO DO BUFFER DE RECEBIMENTO
set_bank (BANCO_0);
write_register(OPWCR, ERDPTL, 0x00);
write_register(OPWCR, ERDPTH, 0x00);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// CONFIGURANDO O BUFFER DE TRANSMISSÃƒO 
// INÃCIO DO BUFFER DE TRANSMISSÃƒO
set_bank (BANCO_0);
write_register(OPWCR, ETXSTL, 0x11);
write_register(OPWCR, ETXSTH, 0x1A);

// FINAL DO BUFFER DE TRANSMISSÃƒO
set_bank (BANCO_0);
write_register(OPWCR, ETXNDL, 0xFF);
write_register(OPWCR, ETXNDH, 0x1F);

// PONTEIRO DO BUFFER DE TRANSMISSÃƒO
set_bank (BANCO_0);
write_register(OPWCR, EWRPTL, 0x11);
write_register(OPWCR, EWRPTH, 0x1A);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// DEFININDO ERXRDPT - ONDE O Ã‰ PROIBIDO DE ESCREVER
set_bank (BANCO_0);
write_register(OPWCR, ERXRDPTL, 0x00);
write_register(OPWCR, ERXRDPTH, 0x00);
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
write_register(OPWCR, ECON1, 0b00000100);
write_register(OPWCR, ECON2, 0b10000000);
///////////////////////////////////////////////////////////////////////////////////////////////
}
